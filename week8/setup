Your ESP32 sketch uses these headers:

#include <WiFi.h>
#include <ESPAsyncWebServer.h>


ðŸ‘‰ Required libraries:

ESPAsyncWebServer

Install from Arduino IDE â†’ Library Manager â†’ search ESPAsyncWebServer â†’ install.

GitHub: https://github.com/me-no-dev/ESPAsyncWebServer

AsyncTCP (dependency for ESPAsyncWebServer)

Install from Arduino IDE â†’ Library Manager â†’ search AsyncTCP â†’ install.

GitHub: https://github.com/me-no-dev/AsyncTCP

ðŸ“Œ steps:

Open Arduino IDE â†’ Tools > Board > ESP32 â†’ pick your board (e.g. ESP32 Dev Module).

Sketch > Include Library > Manage Librariesâ€¦

Search and install:

ESP Async WebServer

AsyncTCP

Thatâ€™s it, your ESP32 code will compile.

ðŸ”¹ For Python (PC side)

Your Python script imports:

import cv2
import mediapipe as mp
import requests


ðŸ‘‰ Required packages:

OpenCV

pip install opencv-python


MediaPipe

pip install mediapipe


Requests

pip install requests


ðŸ“Œ optional: if pip complains, try python -m pip install ... depending on your environment.

ðŸ”¹ Quick test

Upload the ESP32 sketch â†’ check Serial Monitor â†’ note down the IP address.

Update this line in Python script:

ESP32_IP = "http://<your-esp32-ip>"


Run Python:

python your_script.py


Move your hand in front of the camera â†’ it will send /led/<finger>/on|off requests to ESP32.

ESP32 Serial Monitor will log requests and LED pins change.
